# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

resources:
  repositories:
  - repository: LibraryDev
    type: git
    name: Te Creemos Pal Apuro/LibraryDev
    ref: dev-kata

trigger:
- dev-kata

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug'
  CSEnvironment: 'QA-Tecreemos'

steps:
- checkout: self
- checkout: LibraryDev
- task: CmdLine@2
  inputs:
    script: 'mkdir Shell'
    workingDirectory: '$(Build.SourcesDirectory)'
    failOnStderr: false

- script: dir $(Build.SourcesDirectory)
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    vsVersion: '16.0'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    createLogFile: true

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/LibraryDev/Shell'
    Contents: '**'
    TargetFolder: '$(Build.SourcesDirectory)/Shell'
    CleanTargetFolder: true
    OverWrite: true
    flattenFolders: true

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/src/KS.Time/KS.Time.Api/bin/$(buildConfiguration)/netcoreapp2.2'
    Contents: 'KS.Time*.*'
    TargetFolder: '$(Build.SourcesDirectory)/Shell'
    CleanTargetFolder: true
    OverWrite: true
    flattenFolders: true

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/src/KS.Time/ConnectionString/$(CSEnvironment)'
    Contents: '*.config'
    TargetFolder: '$(Build.SourcesDirectory)/Shell'
    OverWrite: true
    flattenFolders: true

- task: CmdLine@2
  inputs:
    script: 'dir'
    workingDirectory: '$(Build.SourcesDirectory)/Shell'
    failOnStderr: false

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'dotnet'
    targetPath: '$(Build.SourcesDirectory)/Shell'

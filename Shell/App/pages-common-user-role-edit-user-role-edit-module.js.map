{"version":3,"sources":["./src/app/pages/common/user-role-edit/user-role-edit.page.html","./src/app/pages/common/user-role-edit/user-role-edit.module.ts","./src/app/pages/common/user-role-edit/user-role-edit.page.scss","./src/app/pages/common/user-role-edit/user-role-edit.page.ts"],"names":[],"mappings":"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","file":"pages-common-user-role-edit-user-role-edit-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n<ion-content class=\\\"ion-padding\\\">\\n    <ion-grid class=\\\"ion-no-padding\\\">\\n        <ion-row>\\n          <ion-col class=\\\"ion-no-padding\\\" size=\\\"8\\\" >\\n              <ion-toolbar>\\n              <ion-buttons slot=\\\"start\\\">\\n                  <ion-back-button text=\\\"Usuarios y roles\\\" icon=\\\"arrow-round-back\\\" [defaultHref]=\\\"defaultHref\\\"></ion-back-button>\\n                </ion-buttons>\\n         \\n            <span class=\\\"title\\\">| Usuario y rol</span>\\n            </ion-toolbar>\\n          </ion-col>\\n          <ion-col class=\\\"ion-no-padding ion-text-end buttons-form\\\" size=\\\"4\\\" >\\n              <ion-button (click)=\\\"goBack()\\\" size=\\\"default\\\" class=\\\" sfs-button secondary\\\" fill=\\\"clear\\\" >\\n                  Cancelar\\n                </ion-button>\\n                <ion-button [disabled]=\\\"this.form.invalid == true || disabledButton == true\\\" (click)=\\\"saveData()\\\" size=\\\"default\\\"\\n                  class=\\\"sfs-button primary\\\">\\n                  {{ activatingText }} \\n                </ion-button>\\n            </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n  <ion-grid > \\n    <form [formGroup]=\\\"form\\\">\\n         \\n         <ion-row *ngIf=\\\"guidUserFrom == null\\\">\\n        <ion-col size-xs=\\\"12\\\" size-lg=\\\"12\\\">\\n         \\n          <ion-item lines=\\\"none\\\" class=\\\"item-form-group form-group sfs-form-item\\\" formGroupName=\\\"UserRole\\\" >\\n            <ion-label position=\\\"stacked\\\">Correo electrónico</ion-label>\\n            <ion-input  [ngClass]=\\\"{ 'sfs-input':true, 'form-control': true, 'is-invalid':  email.touched &&  email.errors }\\\" type=\\\"email\\\" (ionChange)=\\\"isEmailRegistered()\\\" debounce=\\\"500\\\" formControlName=\\\"Email\\\">\\n            </ion-input>\\n          </ion-item>\\n          <div class=\\\"error-container\\\">\\n  \\n            <div class=\\\"error-message\\\" *ngIf=\\\"email.errors && email.errors['email'] == true\\\">\\n              \\n              La información ingresada no corresponde a un email\\n            </div>\\n          \\n            \\n          </div>\\n        </ion-col>\\n\\n      </ion-row>\\n\\n      <ion-row *ngIf=\\\"guidUserFrom == null\\\">\\n        <ion-col size-xs=\\\"12\\\" size-lg=\\\"12\\\">\\n         \\n          \\n            <ion-item lines=\\\"none\\\" class=\\\"form-group item-form-group sfs-form-item\\\" formGroupName=\\\"UserRole\\\" lines=\\\"none\\\">\\n              <ion-label position=\\\"stacked\\\">Nombre</ion-label>\\n              <ion-input [disabled]=\\\"user != null\\\" [ngClass]=\\\"{ 'sfs-input':true, 'form-control': true, 'is-invalid':  firstName.touched &&  firstName.errors }\\\" type=\\\"text\\\"  debounce=\\\"500\\\" formControlName=\\\"FirstName\\\">\\n              </ion-input>\\n            </ion-item>\\n\\n          \\n          </ion-col>\\n\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size-xs=\\\"12\\\" size-lg=\\\"12\\\" *ngIf=\\\"guidUserFrom == null\\\">\\n             \\n              <ion-item lines=\\\"none\\\"  class=\\\"item-form-group sfs-form-item\\\" formGroupName=\\\"UserRole\\\" >\\n                <ion-label position=\\\"stacked\\\">Apellidos</ion-label>\\n                <ion-input [ngClass]=\\\"{ 'sfs-input':true, 'form-control': true, 'is-invalid':  lastName.touched &&  lastName.errors }\\\" [disabled]=\\\"user != null\\\"   type=\\\"text\\\"  debounce=\\\"500\\\" formControlName=\\\"LastName\\\">\\n                </ion-input>\\n              </ion-item>\\n             \\n            </ion-col> \\n          </ion-row>\\n\\n          <ion-row *ngIf=\\\"user == null && guidUserFrom == null\\\">\\n              <ion-col size-xs=\\\"12\\\" size-lg=\\\"12\\\">\\n                 \\n                  <ion-item lines=\\\"none\\\"  class=\\\"item-form-group sfs-form-item\\\" formGroupName=\\\"UserRole\\\" >\\n                    <ion-label position=\\\"stacked\\\">Contraseña</ion-label>\\n                    <ion-input [ngClass]=\\\"{ 'sfs-input':true, 'form-control': true }\\\" [disabled]=\\\"user != null\\\"   type=\\\"text\\\"  debounce=\\\"500\\\" formControlName=\\\"Password\\\">\\n                    </ion-input>\\n                  </ion-item>\\n                 \\n                </ion-col> \\n              </ion-row>\\n\\n\\n            <ion-row *ngIf=\\\"user != null && guidUserFrom == null\\\">\\n            <ion-col size-xs=\\\"12\\\" size-lg=\\\"12\\\"> \\n              <ion-item lines=\\\"none\\\"  class=\\\"item-form-group sfs-form-item\\\" formGroupName=\\\"UserRole\\\" >\\n                <ion-label position=\\\"stacked\\\">Usuario</ion-label>\\n                <mat-select formControlName=\\\"GuidUser\\\" [ngClass]=\\\"{ 'sfs-input':true, 'form-control': true, 'is-invalid':  guidUser.touched &&  guidUser.errors }\\\" >\\n                  \\n                  <mat-option *ngFor=\\\"let user of users\\\" [value]=\\\"user.GuidUser\\\">{{user.DisplayName}}</mat-option>\\n               \\n                </mat-select>\\n                \\n                \\n \\n              </ion-item>\\n            </ion-col>\\n\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size-xs=\\\"12\\\" size-lg=\\\"12\\\"> \\n              <ion-item lines=\\\"none\\\"  class=\\\"item-form-group sfs-form-item\\\"  formGroupName=\\\"UserRole\\\" >\\n                <ion-label position=\\\"stacked\\\">Rol</ion-label>\\n                <mat-select formControlName=\\\"GuidRole\\\"  [ngClass]=\\\"{ 'sfs-input':true, 'form-control': true, 'is-invalid':  guidRole.touched &&  guidRole.errors }\\\" >\\n                  <mat-option [value]=\\\"\\\" selected>None</mat-option>\\n                  <mat-option *ngFor=\\\"let role of roles\\\" [value]=\\\"role.GuidRole\\\">{{role.RoleName}}</mat-option>\\n               \\n                </mat-select>\\n               \\n              </ion-item>\\n            </ion-col>\\n\\n          </ion-row>\\n\\n\\n      \\n    </form>\\n  </ion-grid>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserRoleEditPage } from './user-role-edit.page';\nimport {MatSelectModule} from '@angular/material/select';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserRoleEditPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UserRoleEditPage]\n})\nexport class UserRoleEditPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NvbW1vbi91c2VyLXJvbGUtZWRpdC91c2VyLXJvbGUtZWRpdC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, Injector, ViewChild } from '@angular/core';\nimport { BasePage, StorageService, UserService, ApiResponse } from 'sfscommon';\nimport { sfsService } from 'src/app/services/common/sfs.service';\nimport { FormGroup, AbstractControl, FormControl, Validators } from '@angular/forms';\nimport { secUserCompanyModel, secUserModel, secRoleModel } from 'src/app/models/common/system-models';\n\n// Third Library Imports\n\n\n@Component({\n  selector: 'app-user-role-edit',\n  templateUrl: './user-role-edit.page.html',\n  styleUrls: ['./user-role-edit.page.scss'],\n})\nexport class UserRoleEditPage extends BasePage implements OnInit {\n  loadingData: boolean = true;\n  guidItem: string = null;\n  form: FormGroup;\n  item: secUserCompanyModel;\n  emailRegistered: boolean = false;\n  user: secUserModel = null;\n  activatingText: string = 'Guardar';\n  disabledButton: boolean = false;\n  textoModal: string = \"ssdsfs\";\n  roles: Array<secRoleModel> = [];\n  users: Array<secUserModel> = [];\n  //guidUser:string=null;\n  submitAttempt: boolean = false;\n  guidUserFrom: string = null;\n  @ViewChild(\"ionItemGuidRole\") public ionItemGuidRole: HTMLElement;\n\n  public get userRole(): FormGroup { return <FormGroup>this.form.get('UserRole'); }\n  public get email(): AbstractControl { return <AbstractControl>this.form.get('UserRole.Email'); }\n  public get firstName(): AbstractControl { return <AbstractControl>this.form.get('UserRole.FirstName'); }\n  public get lastName(): AbstractControl { return <AbstractControl>this.form.get('UserRole.LastName'); }\n  public get guidRole(): AbstractControl { return <AbstractControl>this.form.get('UserRole.GuidRole'); }\n  public get guidUser(): AbstractControl { return <AbstractControl>this.form.get('UserRole.GuidUser'); }\n  public get password(): AbstractControl { return <AbstractControl>this.form.get('UserRole.Password'); }\n\n  GuidRole: string = null;\n  GuidUser: string = \"00000000-0000-0000-0000-000000000000\";\n  defaultHref: string;\n\n  constructor(public injector: Injector,\n\n    public storage: StorageService,\n    public userService: UserService,\n    public sfsService: sfsService\n\n  ) {\n\n    super(injector);\n    this.title = 'Detalle de relación rol y usuario';\n\n\n    if (this.guidUserFrom != null) {\n      this.form = new FormGroup({\n        UserRole: new FormGroup({\n\n          GuidRole: new FormControl(null, [Validators.required]),\n\n        })\n      });\n    } else {\n      this.form = new FormGroup({\n        UserRole: new FormGroup({\n          Email: new FormControl('', [Validators.required, Validators.email]),\n          FirstName: new FormControl('', [Validators.required]),\n          LastName: new FormControl('', [Validators.required]),\n          GuidRole: new FormControl(null, [Validators.required]),\n          GuidUser: new FormControl(null),\n          Password: new FormControl(null),\n        })\n      });\n    }\n    this.defaultHref = '/system/users-roles';\n    this.guidItem = this.route.snapshot.paramMap.get('guidUserCompany');\n    this.guidUserFrom = this.route.snapshot.paramMap.get('guidUser');\n\n  }\n\n\n  async ngOnInit() {\n    this.getData();\n    //this.getRoles();\n\n    if (this.guidUserFrom != null) {\n\n      let userResponse = await this.sfsService.CustomMethod({ \"guidUser\": this.guidUserFrom }, \"secUsers\", \"GetUser\");\n\n\n\n      this.getRoles(this.guidUserFrom);\n\n      if (userResponse.status == \"success\") {\n        if (userResponse.data != null) {\n          this.email.setValue(userResponse.data.Email);\n          this.user = userResponse.data;\n          this.GuidUser = this.user.GuidUser;\n          this.guidUser.setValue(this.user.GuidUser);\n          this.firstName.setValue(this.user.FirstName);\n          this.lastName.setValue(this.user.LastName);\n          this.users.push(this.user);\n        }\n      }\n    }\n  }\n\n  async touch(x) {\n    this.ionItemGuidRole.className = this.ionItemGuidRole.className + \" ion-touched\";\n    console.log(x);\n  }\n  async getRoles(guidUser?: string) {\n    let response =  await this.sfsService.Get({ EntitySet: secRoleModel._EntitySetName, Usemode: \"roles-admin-app-for-use\" });\n    if (response.isSuccess()) {\n      this.roles = response.data;\n      let userData = await this.userService.getUserData();\n      let currentRolesResponse: ApiResponse<any> = null;\n      if (guidUser != null) {\n        currentRolesResponse = await this.sfsService.CustomMethod({ \"guidUser\": guidUser }, \"secRoles\", \"GetRolesOfUser\");\n\n      } else {\n        currentRolesResponse = await this.sfsService.CustomMethod({}, \"secRoles\", \"GetRolesOfUser\");\n\n      }\n      if (currentRolesResponse.status == \"success\") {\n        currentRolesResponse.data.forEach(element => {\n          this.roles.splice(this.roles.findIndex(p => p.GuidRole == element.GuidRole), 1);\n        });\n      }\n\n    } else {\n      this.roles = [];\n    }\n  }\n  /* async getUsers(){\n    let response  = await <ApiResponse<Array<secUserModel>>>this.sfsService.Get({ EntitySet: secUserModel._EntitySetName, Usemode: \"roles-admin-app\"  });\n    if (response.status === \"success\" ){\n      this.users = response.data;\n    }else{\n      this.roles = [];\n    }\n  } */\n\n\n  public hasError = (controlName: string, errorName: string) => {\n    return this.form.controls[controlName].hasError(errorName);\n  }\n\n  async getData() {\n    //let user:secUserCompanyModel  = null;\n    console.log(\"guidItem\", this.guidItem);\n    if (this.guidItem != null) {\n\n      let result = await this.sfsService.GetItem(this.guidItem, secUserCompanyModel._EntitySetName);\n\n      if (result.status == \"success\") {\n        this.item = result.data;\n        if (this.item != null) {\n          this.GuidRole = this.item.GuidRole;\n          this.GuidUser = this.item.GuidUser;\n\n          this.email.setValue(this.item.Email);\n          this.firstName.setValue(this.item.FirstName);\n          this.lastName.setValue(this.item.LastName);\n          this.guidRole.setValue(this.item.GuidRole);\n          this.guidUser.setValue(this.item.GuidUser);\n        }\n      }\n    }\n  }\n  async  isEmailRegistered() {\n    if (this.guidUserFrom == null) {\n      const response = await this.sfsService.CustomMethod({ email: this.email.value }, secUserModel._EntitySetName, \"GetUserByEmail\");\n      if (response.status == \"success\" && response.data != null) {\n        this.user = response.data;\n        this.GuidUser = this.user.GuidUser;\n        this.guidUser.setValue(this.user.GuidUser);\n        this.firstName.setValue(this.user.FirstName);\n        this.lastName.setValue(this.user.LastName);\n        this.users.push(this.user);\n      } else {\n        this.user = null;\n        this.GuidUser = \"00000000-0000-0000-0000-000000000000\";\n        this.guidUser.setValue(null);\n        this.firstName.setValue(null);\n        this.lastName.setValue(null);\n        this.password.setValue(null);\n        this.users = [];\n      }\n    }\n  }\n  async changeRole(event) {\n\n  }\n  async goBack() {\n\n    if (this.guidUserFrom  != null){\n      this.navCtrl.navigateForward(`system/users-roles/user/${this.guidUserFrom}`, { animated: true });\n    }else{\n      this.navCtrl.navigateForward(`system/users-roles`, { animated: true });\n    }\n    \n\n  }\n\n  async saveData() {\n    this.submitAttempt = true;\n\n    this.activatingText = 'Guardando...';\n    this.disabledButton = true;\n    this.loadingData = true;\n\n\n    if (this.form.valid == true) {\n      let userData = await this.userService.getUserData();\n\n      this.item = this.form.value.UserRole;\n      this.item.GuidUserCompany = this.guidItem;\n      this.item.GuidCompany = userData.IdCompany;\n      this.item.AppNameKey = \"KSTime\";\n      this.item.SetInitialData = true;\n      if (this.item.GuidUser == null) {\n        this.item.GuidUser = \"00000000-0000-0000-0000-000000000000\";\n      }\n      // user.UserName = user.Email;\n      // user.GuidUser = this.guidUser;\n      let apiResponse: ApiResponse<any> = null;\n      console.log(\"after create or save\", this.guidItem);\n      if (this.guidItem != null) {\n\n\n        apiResponse = await this.sfsService.Update(this.item, secUserCompanyModel._EntitySetName, \"GuidUser,GuidRole\");\n\n      } else {\n\n        apiResponse = await this.sfsService.Create(this.item, secUserCompanyModel._EntitySetName);\n\n      }\n\n      if (apiResponse.status == 'success') {\n\n\n        this.loadingData = false;\n        this.activatingText = 'Guardado';\n\n       \n        \n        this.goBack();\n      }\n    }\n  }\n\n}\n"],"sourceRoot":"webpack:///"}
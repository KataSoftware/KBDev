{"version":3,"sources":["./src/app/pages/common/role-edit/role-edit.page.html","./src/app/models/common/utils.ts","./src/app/pages/common/role-edit/role-edit.module.ts","./src/app/pages/common/role-edit/role-edit.page.scss","./src/app/pages/common/role-edit/role-edit.page.ts"],"names":[],"mappings":"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","file":"pages-common-role-edit-role-edit-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button [defaultHref]=\\\"defaultHref\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ title }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n    <ion-grid class=\\\"ion-no-padding\\\">\\n        <ion-row>\\n          <ion-col class=\\\"ion-no-padding\\\">\\n              <ion-toolbar>\\n              <ion-buttons slot=\\\"start\\\">\\n                  <ion-back-button text=\\\"Usuarios de cliente\\\" icon=\\\"arrow-round-back\\\" [defaultHref]=\\\"defaultHref\\\"></ion-back-button>\\n                </ion-buttons>\\n         \\n            <span class=\\\"title\\\">| Rol</span>\\n            </ion-toolbar>\\n          </ion-col>\\n          <ion-col class=\\\"ion-no-padding ion-text-end buttons-form\\\" >\\n              <ion-button (click)=\\\"goBack()\\\" size=\\\"default\\\" class=\\\" sfs-button secondary\\\" fill=\\\"clear\\\" >\\n                  Cancelar\\n                </ion-button>\\n                <ion-button [disabled]=\\\"this.form.invalid == true || disabledButton == true\\\" (click)=\\\"saveData()\\\" size=\\\"default\\\"\\n                  class=\\\"sfs-button primary\\\">\\n                  {{ activatingText }} \\n                </ion-button>\\n            </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n  <ion-grid> \\n    <form [formGroup]=\\\"form\\\">\\n         \\n         <ion-row>\\n        <ion-col size-xs=\\\"12\\\" size-lg=\\\"12\\\">\\n          <!-- Correo electrónico -->\\n          <ion-item class=\\\"item-form-group sfs-form-item\\\" formGroupName=\\\"Role\\\" >\\n            <ion-label position=\\\"stacked\\\">Nombre del rol</ion-label>\\n            <ion-input  class=\\\"sfs-input\\\" type=\\\"text\\\" (ionChange)=\\\"roleNameAvailable()\\\" debounce=\\\"500\\\" formControlName=\\\"RoleName\\\">\\n            </ion-input>\\n          </ion-item>\\n          <div class=\\\"error-container\\\">\\n            <div class=\\\"error-message\\\"\\n              *ngIf=\\\"form.get('Role.RoleName').errors && roleName.errors['required'] == true\\\">\\n              <ion-icon style=\\\"color: #F7921D\\\" name=\\\"information-circle-outline\\\" role=\\\"img\\\" class=\\\"hydrated\\\"\\n                aria-label=\\\"information circle outline\\\"></ion-icon>\\n              <span style=\\\"color: #F7921D\\\">Campo requerido</span>\\n            </div>\\n          \\n            <div class=\\\"error-message\\\" *ngIf=\\\"roleNameInUse == true\\\">\\n                <ion-icon style=\\\"color: #F7921D\\\" name=\\\"information-circle-outline\\\" role=\\\"img\\\" class=\\\"hydrated\\\"\\n                  aria-label=\\\"information circle outline\\\"></ion-icon>\\n                <span style=\\\"color: #F7921D\\\">El nombre del rol ya ha sido registrado</span>\\n              </div>\\n          </div>\\n        </ion-col>\\n\\n\\n\\n\\n        <ion-col size-xs=\\\"12\\\" size-lg=\\\"12\\\">\\n            <!-- Correo electrónico -->\\n            <ion-item class=\\\"item-form-group sfs-form-item\\\" formGroupName=\\\"Role\\\" >\\n              <ion-label position=\\\"stacked\\\">Clave de nombre</ion-label>\\n             \\n              <ion-input  class=\\\"sfs-input\\\"  (ionChange)=\\\"roleNameKeyAvailable()\\\" type=\\\"text\\\"  debounce=\\\"500\\\" formControlName=\\\"NameKey\\\">\\n              </ion-input>\\n            </ion-item>\\n            <div class=\\\"error-container\\\">\\n              \\n            \\n              <div class=\\\"error-message\\\" *ngIf=\\\"nameKeyInUse == true\\\">\\n                  <ion-icon style=\\\"color: #F7921D\\\" name=\\\"information-circle-outline\\\" role=\\\"img\\\" class=\\\"hydrated\\\"\\n                    aria-label=\\\"information circle outline\\\"></ion-icon>\\n                  <span style=\\\"color: #F7921D\\\">La clave de rol ya ha sido usada</span>\\n                </div>\\n            </div>\\n          </ion-col>\\n\\n          <ion-col size-xs=\\\"12\\\" size-lg=\\\"12\\\">\\n              <!-- Correo electrónico -->\\n              <ion-item class=\\\"item-form-group sfs-form-item\\\" formGroupName=\\\"Role\\\" >\\n                <ion-label position=\\\"stacked\\\">Es de acceso total</ion-label>\\n            \\n                <mat-select formControlName=\\\"IsFullAccessControl\\\" [ngClass]=\\\"{ 'sfs-input':true, 'form-control': true  }\\\" >\\n                      \\n                        <mat-option *ngFor=\\\"let option of isFullAccessOptions\\\" [value]=\\\"option.Value\\\">{{option.Text}}</mat-option>\\n                   \\n                   \\n                    </mat-select>\\n                    \\n                    \\n              </ion-item>\\n              <div class=\\\"error-container\\\">\\n                \\n              \\n                <div class=\\\"error-message\\\" *ngIf=\\\"nameKeyInUse == true\\\">\\n                    <ion-icon style=\\\"color: #F7921D\\\" name=\\\"information-circle-outline\\\" role=\\\"img\\\" class=\\\"hydrated\\\"\\n                      aria-label=\\\"information circle outline\\\"></ion-icon>\\n                    <span style=\\\"color: #F7921D\\\">La clave de rol ya ha sido usada</span>\\n                  </div>\\n              </div>\\n            </ion-col>\\n  \\n\\n\\n\\n\\n      </ion-row>\\n    </form>\\n  </ion-grid>\\n</ion-content>\\n\";","\n    export class BooleanNullable {\n        Value?: string;\n        Text?: string;\n\n        public static GetOptions(): Array<BooleanNullable> {\n            let result: Array<BooleanNullable> = new Array<BooleanNullable>();\n            result.push( { Value: \"null\", Text: \"No establecido\" });\n            result.push( { Value: \"true\", Text: \"Si\" });\n            result.push( { Value: \"false\", Text: \"No\" });\n            \n            return result;\n        }\n\n        public static BooleanToOption(value?:boolean): string {\n            let result = new BooleanNullable();\n            if (value == null ){\n                \n                result.Text = \"No establecido\";\n                result.Value = \"null\";\n            }else if (value == false){\n                result.Text = \"No\";\n                result.Value = \"false\";\n            }else if (value == true){\n                result.Text = \"Si\";\n                result.Value = \"true\";\n            }\n\n            return result.Value;\n        }\n        public static OptionToBoolean(value?:any): any {\n            let result:any = null;\n            if (value == \"true\"){\n                result = true;\n            }else if (value == \"false\"){\n                result = false;\n            }\n\n            return result;\n        }\n\n    }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RoleEditPage } from './role-edit.page';\nimport { SFSCommonModule } from 'sfscommon';\nimport { MatSelectModule } from '@angular/material/select';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RoleEditPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RoleEditPage]\n})\nexport class RoleEditPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NvbW1vbi9yb2xlLWVkaXQvcm9sZS1lZGl0LnBhZ2Uuc2NzcyJ9 */\";","import { BooleanNullable } from '../../../models/common/utils';\nimport { Component, OnInit, Injector } from '@angular/core';\nimport { BasePage, StorageService, UserService, ApiResponse } from 'sfscommon';\nimport { FormGroup, AbstractControl, FormControl, Validators } from '@angular/forms';\nimport { sfsService } from 'src/app/services/common/sfs.service';\nimport { secRoleModel } from 'src/app/models/common/system-models';\n\n@Component({\n  selector: 'app-role-edit',\n  templateUrl: './role-edit.page.html',\n  styleUrls: ['./role-edit.page.scss'],\n})\nexport class RoleEditPage extends BasePage implements OnInit {\n  loadingData: boolean = true;\n  guidRole: string = null;\n  form: FormGroup;\n  defaultHref:string=null;\n  public get role(): FormGroup { return <FormGroup>this.form.get('Role'); }\n  public get roleName(): AbstractControl { return <AbstractControl>this.form.get('Role.RoleName'); }\n  public get nameKey(): AbstractControl { return <AbstractControl>this.form.get('Role.NameKey'); }\n  public get isFullAccessControl(): AbstractControl { return <AbstractControl>this.form.get('Role.IsFullAccessControl'); }\n\n  isFullAccessOptions:Array<BooleanNullable> =  BooleanNullable.GetOptions();\n  activatingText: string = 'Guardar';\n  disabledButton: boolean = false;\n  textoModal: string = \"ssdsfs\";\n  roleNameInUse: boolean;\n  nameKeyInUse: boolean;\n  roleNameInitial: string = null;\n  nameKeyInitial: string = null;\n  constructor(public injector: Injector,\n\n    public storage: StorageService,\n    public userService: UserService,\n    public sfsService: sfsService) {\n    super(injector);\n    this.title = 'Detalle de rol';\n\n    this.form = new FormGroup({\n      Role: new FormGroup({\n        RoleName: new FormControl('', [Validators.required]),\n        NameKey: new FormControl(''),\n        IsFullAccessControl:new FormControl('')\n      })\n    });\n\n    this.guidRole = this.route.snapshot.paramMap.get('guidRole');\n    this.defaultHref = `system/roles`;\n  }\n\n  async ngOnInit() {\n    this.getData();\n\n  }\n  async getData() {\n    let role: secRoleModel = null;\n\n    if (this.guidRole != null) {\n\n      let result = await this.sfsService.GetItem(this.guidRole, secRoleModel._EntitySetName);\n      if (result.status == \"success\") {\n        role = result.data;\n        if (role != null) {\n          this.roleNameInitial = role.RoleName;\n          this.nameKeyInitial = role.NameKey;\n\n          this.roleName.setValue(role.RoleName);\n          this.nameKey.setValue(role.NameKey);\n          console.log(\"test x22\", role.IsFullAccess);\n          this.isFullAccessControl.setValue(BooleanNullable.BooleanToOption(role.IsFullAccess));\n          \n        }\n      }\n    }\n  }\n  async  roleNameAvailable() {\n    if (this.roleNameInitial == this.roleName.value) {\n      this.roleNameInUse = false;\n    } else {\n      let result = await this.sfsService.CustomMethod({ roleName: this.roleName.value }, \"secRoles\", \"RoleNameAvailable\");\n\n      this.roleNameInUse = result.data == false;\n    }\n  }\n  async  roleNameKeyAvailable() {\n    if (this.nameKeyInitial == this.nameKey.value) {\n      this.nameKeyInUse = false;\n    } else {\n      let result = await this.sfsService.CustomMethod({ nameKey: this.nameKey.value }, \"secRoles\", \"RoleNameKeyAvailable\");\n\n      this.nameKeyInUse = result.data == false;\n    }\n  }\n  async goBack() {\n\n\n    this.navCtrl.navigateForward(`system/roles`, { animated: true });\n\n  }\n\n  async saveData() {\n    console.log(\"saving\");\n\n    if (this.form.valid == true) {\n      this.activatingText = 'Guardando...';\n    this.disabledButton = true;\n    this.loadingData = true;\n    console.log(\"form value\", this.form.value.Role);\n      const role: secRoleModel = this.form.value.Role;\n      role.GuidRole = this.guidRole;\n      let isFullAccessValue = this.isFullAccessControl.value\n      console.log(\"isFullAccessValue\",isFullAccessValue);\n      role.IsFullAccess = BooleanNullable.OptionToBoolean(isFullAccessValue);\n\n      let apiResponse: ApiResponse<any> = null;\n\n      if (this.guidRole != null) {\n\n\n        apiResponse = await this.sfsService.Update(role, secRoleModel._EntitySetName, \"RoleName,NameKey,IsFullAccess\");\n\n      } else {\n\n        apiResponse = await this.sfsService.Create(role, secRoleModel._EntitySetName);\n\n      }\n\n      if (apiResponse.status == 'success') {\n\n\n        this.loadingData = false;\n        this.activatingText = 'Guardado';\n        this.disabledButton = false;\n\n\n      \n        \n\n        this.goBack();\n      }\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}
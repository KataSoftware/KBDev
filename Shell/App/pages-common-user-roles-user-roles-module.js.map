{"version":3,"sources":["./src/app/pages/common/user-roles/user-roles.page.html","./src/app/pages/common/user-roles/user-roles.module.ts","./src/app/pages/common/user-roles/user-roles.page.scss","./src/app/pages/common/user-roles/user-roles.page.ts"],"names":[],"mappings":"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","file":"pages-common-user-roles-user-roles-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n\\n<ion-content class=\\\"ion-padding\\\">\\n    <ion-grid class=\\\"ion-no-padding\\\">\\n        <ion-row>\\n          <ion-col class=\\\"ion-no-padding\\\">\\n              <ion-toolbar>\\n              <ion-buttons slot=\\\"start\\\">\\n                  <ion-back-button [text]=\\\"backText\\\" icon=\\\"arrow-round-back\\\" [defaultHref]=\\\"defaultHref\\\"></ion-back-button>\\n                </ion-buttons>\\n         \\n            <span class=\\\"title\\\">| {{title}}</span>\\n            </ion-toolbar>\\n          </ion-col>\\n          <ion-col class=\\\"ion-no-padding\\\">\\n              <ion-item class=\\\"table-header\\\" lines=\\\"none\\\">\\n                  <ion-button (click)=\\\"addItem()\\\" class=\\\"button-table\\\"  size=\\\"default\\\" slot=\\\"end\\\">\\n                   Agregar nuevo\\n                  </ion-button>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      \\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n      \\n              <div class=\\\"input-group search-place \\\">\\n                  <input #inputSearch class=\\\"form-control border-right-0 border\\\" type=\\\"search\\\"\\n                  placeholder=\\\"Buscar\\\" (search)=\\\"search($event)\\\">\\n                  <span class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-outline-secondary border-left-0 border\\\" type=\\\"button\\\"\\n                            (click)=\\\"search($event)\\\">\\n                      <ion-icon name=\\\"search\\\" class=\\\"icon-search-azul\\\"></ion-icon>\\n                    </button>\\n                  </span>\\n                </div>\\n      \\n          </ion-col>\\n        </ion-row>\\n      \\n      </ion-grid>\\n      <ion-grid>\\n          <ion-row>\\n            <ion-col class=\\\"ion-no-padding\\\" >\\n                <ion-button fill=\\\"clear\\\" (click)=\\\"delete()\\\" *ngIf=\\\"selection.selected.length > 0\\\">\\n                    <ion-icon slot=\\\"start\\\" name=\\\"trash\\\" ></ion-icon>\\n                    Eliminar seleccionados\\n                  </ion-button>\\n            </ion-col>\\n          </ion-row>\\n            </ion-grid>\\n\\n <!-- Tabla -->\\n <ng-container>\\n\\n  \\n  <sfs-table class=\\\"hidde-when-mobile\\\" [data]=\\\"data\\\" [columns]=\\\"tableColumns\\\" [displayedColumns]=\\\"displayedColumns\\\"\\n    [pagination]=\\\"pagination\\\" (onPageChange)=\\\"handlePageChange($event)\\\">\\n  </sfs-table>  \\n\\n</ng-container>\\n<ng-template #guidUserCompanyCell let-value=\\\"value\\\" let-row=\\\"row\\\">\\n  <div>\\n  <mat-checkbox  (click)=\\\"$event.stopPropagation()\\\"\\n  (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n  [checked]=\\\"selection.isSelected(row)\\\"\\n  [aria-label]=\\\"checkboxLabel(row)\\\" ></mat-checkbox>\\n</div>\\n</ng-template>\\n\\n<ng-template #userCell let-value=\\\"value\\\" let-row=\\\"row\\\">\\n  <div class=\\\"navigation-cell\\\" \\n  (click)=\\\"edit(row)\\\">\\n  {{ row?.FksecUserText }} \\n</div>\\n\\n\\n\\n</ng-template>\\n\\n<ng-template #roleCell let-value=\\\"value\\\" let-row=\\\"row\\\">\\n{{ row?.FksecRoleText }} \\n</ng-template>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserRolesPage } from './user-roles.page';\nimport { SFSCommonModule } from 'sfscommon';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserRolesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    SFSCommonModule,\n    MatCheckboxModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UserRolesPage]\n})\nexport class UserRolesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NvbW1vbi91c2VyLXJvbGVzL3VzZXItcm9sZXMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit, Injector, ViewChild, TemplateRef } from '@angular/core';\nimport { ListPage, DataService, UserService, UserDataModel, Pagination, ServiceData } from 'sfscommon';\nimport { secUserCompanyModel } from 'src/app/models/common/system-models';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n// Third Library Imports\n\nimport { sfsService } from 'src/app/services/common/sfs.service';\n\n@Component({\n  selector: 'app-user-roles',\n  templateUrl: './user-roles.page.html',\n  styleUrls: ['./user-roles.page.scss'],\n})\nexport class UserRolesPage extends ListPage implements OnInit {\n  public userData: UserDataModel;\n\n  selection = new SelectionModel<secUserCompanyModel>(true, []);\n  // cells\n  public defaultHref: string;\n  backText = \"Configuración\";\n  @ViewChild('guidUserCompanyCell') public guidUserCompanyCell: TemplateRef<any>;\n  @ViewChild('userCell') public userCell: TemplateRef<any>;\n  @ViewChild('roleCell') public roleCell: TemplateRef<any>;\n  public tempPagination: Pagination;\n  public guidUser: string = null;\n  title:string=\"Usuarios y roles\";\n  constructor(public injector: Injector,\n    public dataService: DataService,\n    public userService: UserService,\n    public sfsService: sfsService,\n  ) {\n    super(injector, dataService);\n    this.data = [];\n    // Se inicializan\n    this.pagination = {\n      total: 0,\n      pageIndex: 1,\n      pageSize: 10,\n      previousPageIndex: 0\n    };\n    this.defaultHref = \"configuration\";\n  \n    this.serviceData = new ServiceData();\n\n    this.guidUser = this.route.snapshot.paramMap.get(\"guidUser\");\n    if (this.guidUser != null) {\n      this.defaultHref = \"system/users\";\n      this.backText = \"Usuarios\";\n    \n    }\n   \n  }\n  async ionViewWillEnter() {\n    if (this.loadingData == false) { await this.loadData(); }\n  }\n  async ngOnInit() {\n\n    this.userData = await this.userService.getUserData();\n    let query: string;\n    console.log(\"guidUser\", this.guidUser);\n    if (this.guidUser != null) {\n      let userResponse  = await this.sfsService.CustomMethod({ guidUser: this.guidUser }, \"secUsers\", \"GetUser\");\n\n      if (userResponse.status == \"success\"){\n         if (userResponse.data != null){\n          this.title = \"Roles del usuario \" +  userResponse.data.FirstName + \" \" + userResponse.data.LastName;\n          console.log(\"title\", this.title);\n        }\n      }\n      \n\n    }\n\n    await this.bindData();\n\n  }\n  public async bindData() {\n    try {\n      this.tableColumns = [\n        {\n          cellTemplate: this.guidUserCompanyCell,\n          name: '',\n          prop: secUserCompanyModel.PropertyNames.GuidUserCompany,\n          sortable: false,\n        },\n        {\n          cellTemplate: this.userCell,\n          name: 'Usuario',\n          prop: secUserCompanyModel.PropertyNames.FksecUser,\n          sortable: false,\n        },\n        {\n          cellTemplate: this.roleCell,\n          name: 'Rol',\n          prop: secUserCompanyModel.PropertyNames.FksecRole,\n        }];\n      if (this.guidUser == null) {\n        this.displayedColumns = [\n          secUserCompanyModel.PropertyNames.GuidUserCompany, secUserCompanyModel.PropertyNames.FksecUser, secUserCompanyModel.PropertyNames.FksecRole\n        ];\n      } else {\n        this.displayedColumns = [\n          secUserCompanyModel.PropertyNames.GuidUserCompany,  secUserCompanyModel.PropertyNames.FksecRole\n        ];\n      }\n      let query = null;\n      if (this.guidUser != null) {\n        query = `it.secUser.GuidUser = Guid(\"${this.guidUser}\")`;\n      }\n      this.serviceData = {\n\n        Page: 1,\n        PageSize: 7,\n        RestServiceAppKey: 'SFSCoreSecurity', // no es necesario si se trata de la aplicación de negocio, en este caso se especifica porque estamos usando el servicio de la app core\n        EntitySet: secUserCompanyModel._EntitySetName,\n        Fields: `${secUserCompanyModel.PropertyNames.secUser},${secUserCompanyModel.PropertyNames.secRole}`,\n        Usemode: \"users-admin-app\",\n        FreeText: this.serviceData.FreeText,\n        AllFields: true,\n        Query: query,\n        SortBy: 'UpdatedDate',\n        SortDirection: 'desc',\n\n      };\n\n      await this.configurePagination(this.serviceData);\n\n      this.tempPagination = { ...this.pagination };\n      this.tempPagination.pageIndex = 1;\n\n      // Se recuperan los primeros elementos.\n      this.data = await this.getData();\n    }\n    catch (error) { this.logError(error); }\n    finally { this.loadingData = false; }\n  }\n\n  public async search(e) {\n    this.serviceData.FreeText = e.target.value;\n    this.ngOnInit();\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: secUserCompanyModel): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row `;\n  }\n\n  async delete() {\n   \n    \n\n    // if (modalResponse == true) {\n    //   let response = await this.sfsService.Delete(this.selection.selected.map(({ GuidUserCompany }) => GuidUserCompany), secUserCompanyModel._EntitySetName);\n      \n    //   console.log(\"response of delete\", response);\n\n    //   this.bindData();\n    // } else {\n      \n    // }\n  }\n\n  async edit(row) {\n    console.log(\"ax77\", row);\n    this.navCtrl.navigateForward(`system/users-roles/detail/${row.GuidUserCompany}`, { animated: true });\n  }\n\n  async addItem() {\n    if (this.guidUser != null){\n      this.navCtrl.navigateForward(`system/users-roles/user/${this.guidUser}/create`, { animated: true });\n  \n    }else{\n    this.navCtrl.navigateForward(`system/users-roles/create`, { animated: true });\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}